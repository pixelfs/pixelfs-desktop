// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Create as $Create} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as anypb$0 from "../../../../../../google.golang.org/protobuf/types/known/anypb/models.js";
// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as timestamppb$0 from "../../../../../../google.golang.org/protobuf/types/known/timestamppb/models.js";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as $internal from "./internal.js";

export class AddLocationResponse {
    "location"?: Location | null;

    /** Creates a new AddLocationResponse instance. */
    constructor($$source: Partial<AddLocationResponse> = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new AddLocationResponse instance from a string or object.
     */
    static createFrom($$source: any = {}): AddLocationResponse {
        const $$createField0_0 = $$createType1;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("location" in $$parsedSource) {
            $$parsedSource["location"] = $$createField0_0($$parsedSource["location"]);
        }
        return new AddLocationResponse($$parsedSource as Partial<AddLocationResponse>);
    }
}

export class AddStorageLinkResponse {
    "storage_link"?: StorageLink | null;

    /** Creates a new AddStorageLinkResponse instance. */
    constructor($$source: Partial<AddStorageLinkResponse> = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new AddStorageLinkResponse instance from a string or object.
     */
    static createFrom($$source: any = {}): AddStorageLinkResponse {
        const $$createField0_0 = $$createType3;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("storage_link" in $$parsedSource) {
            $$parsedSource["storage_link"] = $$createField0_0($$parsedSource["storage_link"]);
        }
        return new AddStorageLinkResponse($$parsedSource as Partial<AddStorageLinkResponse>);
    }
}

export class AddStorageResponse {
    "storage"?: Storage | null;

    /** Creates a new AddStorageResponse instance. */
    constructor($$source: Partial<AddStorageResponse> = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new AddStorageResponse instance from a string or object.
     */
    static createFrom($$source: any = {}): AddStorageResponse {
        const $$createField0_0 = $$createType5;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("storage" in $$parsedSource) {
            $$parsedSource["storage"] = $$createField0_0($$parsedSource["storage"]);
        }
        return new AddStorageResponse($$parsedSource as Partial<AddStorageResponse>);
    }
}

export class File {
    "name"?: string;
    "type"?: FileType;
    "size"?: number;
    "mode"?: number;
    "hash"?: string;
    "user"?: string;
    "duration"?: number;
    "platform"?: string;
    "modified_at"?: timestamppb$0.Timestamp | null;
    "extensions"?: { [_: string]: anypb$0.Any | null };

    /** Creates a new File instance. */
    constructor($$source: Partial<File> = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new File instance from a string or object.
     */
    static createFrom($$source: any = {}): File {
        const $$createField8_0 = $$createType7;
        const $$createField9_0 = $$createType10;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("modified_at" in $$parsedSource) {
            $$parsedSource["modified_at"] = $$createField8_0($$parsedSource["modified_at"]);
        }
        if ("extensions" in $$parsedSource) {
            $$parsedSource["extensions"] = $$createField9_0($$parsedSource["extensions"]);
        }
        return new File($$parsedSource as Partial<File>);
    }
}

export class FileContext {
    "node_id"?: string;
    "location"?: string;
    "path"?: string;

    /** Creates a new FileContext instance. */
    constructor($$source: Partial<FileContext> = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new FileContext instance from a string or object.
     */
    static createFrom($$source: any = {}): FileContext {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new FileContext($$parsedSource as Partial<FileContext>);
    }
}

export enum FileType {
    /**
     * The Go zero value for the underlying type of the enum.
     */
    $zero = 0,

    FileType_UNKNOWN = 0,
    FileType_NODE = 1,
    FileType_LOCATION = 2,
    FileType_DIR = 3,
    FileType_IMAGE = 4,
    FileType_VIDEO = 5,
    FileType_AUDIO = 6,
    FileType_DOCUMENT = 7,
};

export class GetUserInfoResponse {
    "id"?: string;
    "name"?: string;
    "email"?: string;
    "nodes"?: (Node | null)[];
    "createdAt"?: timestamppb$0.Timestamp | null;

    /** Creates a new GetUserInfoResponse instance. */
    constructor($$source: Partial<GetUserInfoResponse> = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new GetUserInfoResponse instance from a string or object.
     */
    static createFrom($$source: any = {}): GetUserInfoResponse {
        const $$createField3_0 = $$createType13;
        const $$createField4_0 = $$createType7;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("nodes" in $$parsedSource) {
            $$parsedSource["nodes"] = $$createField3_0($$parsedSource["nodes"]);
        }
        if ("createdAt" in $$parsedSource) {
            $$parsedSource["createdAt"] = $$createField4_0($$parsedSource["createdAt"]);
        }
        return new GetUserInfoResponse($$parsedSource as Partial<GetUserInfoResponse>);
    }
}

export class Location {
    "id"?: string;
    "node_id"?: string;
    "name"?: string;
    "type"?: LocationType;
    "path"?: string;
    "block_size"?: number;
    "block_duration"?: number;

    /** Creates a new Location instance. */
    constructor($$source: Partial<Location> = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new Location instance from a string or object.
     */
    static createFrom($$source: any = {}): Location {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new Location($$parsedSource as Partial<Location>);
    }
}

export enum LocationType {
    /**
     * The Go zero value for the underlying type of the enum.
     */
    $zero = 0,

    LocationType_LOCAL = 0,
};

export class Node {
    "id"?: string;
    "name"?: string;
    "status"?: NodeStatus;
    "updatedAt"?: timestamppb$0.Timestamp | null;
    "createdAt"?: timestamppb$0.Timestamp | null;

    /** Creates a new Node instance. */
    constructor($$source: Partial<Node> = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new Node instance from a string or object.
     */
    static createFrom($$source: any = {}): Node {
        const $$createField3_0 = $$createType7;
        const $$createField4_0 = $$createType7;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("updatedAt" in $$parsedSource) {
            $$parsedSource["updatedAt"] = $$createField3_0($$parsedSource["updatedAt"]);
        }
        if ("createdAt" in $$parsedSource) {
            $$parsedSource["createdAt"] = $$createField4_0($$parsedSource["createdAt"]);
        }
        return new Node($$parsedSource as Partial<Node>);
    }
}

export enum NodeStatus {
    /**
     * The Go zero value for the underlying type of the enum.
     */
    $zero = 0,

    NodeStatus_OFFLINE = 0,
    NodeStatus_ONLINE = 1,
};

export class RemoveLocationResponse {

    /** Creates a new RemoveLocationResponse instance. */
    constructor($$source: Partial<RemoveLocationResponse> = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new RemoveLocationResponse instance from a string or object.
     */
    static createFrom($$source: any = {}): RemoveLocationResponse {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new RemoveLocationResponse($$parsedSource as Partial<RemoveLocationResponse>);
    }
}

export class Storage {
    "id"?: string;
    "name"?: string;
    "type"?: StorageType;
    "network"?: StorageNetwork;

    /**
     * Types that are assignable to Config:
     * 
     * 	*Storage_S3
     */
    "Config": $internal.isStorage_Config;

    /** Creates a new Storage instance. */
    constructor($$source: Partial<Storage> = {}) {
        if (!("Config" in $$source)) {
            this["Config"] = null;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new Storage instance from a string or object.
     */
    static createFrom($$source: any = {}): Storage {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new Storage($$parsedSource as Partial<Storage>);
    }
}

export class StorageLink {
    "id"?: string;
    "storage_id"?: string;
    "node_id"?: string;
    "location_id"?: string;
    "limit_size"?: number;
    "used_size"?: number;

    /** Creates a new StorageLink instance. */
    constructor($$source: Partial<StorageLink> = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new StorageLink instance from a string or object.
     */
    static createFrom($$source: any = {}): StorageLink {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new StorageLink($$parsedSource as Partial<StorageLink>);
    }
}

export enum StorageNetwork {
    /**
     * The Go zero value for the underlying type of the enum.
     */
    $zero = 0,

    StorageNetwork_PUBLIC = 0,
    StorageNetwork_PRIVATE = 1,
};

export class StorageS3Config {
    "endpoint"?: string;
    "access_key"?: string;
    "secret_key"?: string;
    "region"?: string;
    "bucket"?: string;
    "prefix"?: string;
    "path_style"?: boolean;

    /** Creates a new StorageS3Config instance. */
    constructor($$source: Partial<StorageS3Config> = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new StorageS3Config instance from a string or object.
     */
    static createFrom($$source: any = {}): StorageS3Config {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new StorageS3Config($$parsedSource as Partial<StorageS3Config>);
    }
}

export enum StorageType {
    /**
     * The Go zero value for the underlying type of the enum.
     */
    $zero = 0,

    StorageType_S3 = 0,
};

export class Sync {
    "id"?: string;
    "src_node_id"?: string;
    "dest_node_id"?: string;
    "name"?: string;
    "enabled"?: boolean;
    "status"?: SyncStatus;
    "src_context"?: FileContext | null;
    "dest_context"?: FileContext | null;
    "config"?: SyncConfig | null;

    /** Creates a new Sync instance. */
    constructor($$source: Partial<Sync> = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new Sync instance from a string or object.
     */
    static createFrom($$source: any = {}): Sync {
        const $$createField6_0 = $$createType15;
        const $$createField7_0 = $$createType15;
        const $$createField8_0 = $$createType17;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("src_context" in $$parsedSource) {
            $$parsedSource["src_context"] = $$createField6_0($$parsedSource["src_context"]);
        }
        if ("dest_context" in $$parsedSource) {
            $$parsedSource["dest_context"] = $$createField7_0($$parsedSource["dest_context"]);
        }
        if ("config" in $$parsedSource) {
            $$parsedSource["config"] = $$createField8_0($$parsedSource["config"]);
        }
        return new Sync($$parsedSource as Partial<Sync>);
    }
}

export class SyncConfig {
    "interval"?: number;
    "duplex"?: boolean;
    "limit"?: number;
    "log"?: string;
    "last_synced_at"?: timestamppb$0.Timestamp | null;

    /** Creates a new SyncConfig instance. */
    constructor($$source: Partial<SyncConfig> = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new SyncConfig instance from a string or object.
     */
    static createFrom($$source: any = {}): SyncConfig {
        const $$createField4_0 = $$createType7;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("last_synced_at" in $$parsedSource) {
            $$parsedSource["last_synced_at"] = $$createField4_0($$parsedSource["last_synced_at"]);
        }
        return new SyncConfig($$parsedSource as Partial<SyncConfig>);
    }
}

export enum SyncStatus {
    /**
     * The Go zero value for the underlying type of the enum.
     */
    $zero = 0,

    SyncStatus_UNSYNCED = 0,
    SyncStatus_SYNCING = 1,
    SyncStatus_SUCCESS = 2,
    SyncStatus_ERROR = 3,
};

// Private type creation functions
const $$createType0 = Location.createFrom;
const $$createType1 = $Create.Nullable($$createType0);
const $$createType2 = StorageLink.createFrom;
const $$createType3 = $Create.Nullable($$createType2);
const $$createType4 = Storage.createFrom;
const $$createType5 = $Create.Nullable($$createType4);
const $$createType6 = timestamppb$0.Timestamp.createFrom;
const $$createType7 = $Create.Nullable($$createType6);
const $$createType8 = anypb$0.Any.createFrom;
const $$createType9 = $Create.Nullable($$createType8);
const $$createType10 = $Create.Map($Create.Any, $$createType9);
const $$createType11 = Node.createFrom;
const $$createType12 = $Create.Nullable($$createType11);
const $$createType13 = $Create.Array($$createType12);
const $$createType14 = FileContext.createFrom;
const $$createType15 = $Create.Nullable($$createType14);
const $$createType16 = SyncConfig.createFrom;
const $$createType17 = $Create.Nullable($$createType16);
