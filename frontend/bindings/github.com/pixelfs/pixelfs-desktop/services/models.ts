// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Create as $Create} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as gorm$0 from "../../../../gorm.io/gorm/models.js";
// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as time$0 from "../../../../time/models.js";

export class TransportManager {
    "ID": number;
    "CreatedAt": time$0.Time;
    "UpdatedAt": time$0.Time;
    "DeletedAt": gorm$0.DeletedAt;

    /**
     * upload, download, copy
     */
    "Type": string;
    "NodeId": string;
    "Location": string;
    "Path": string;
    "Status": string;
    "Progress": number;
    "LocalPath": string | null;

    /** Creates a new TransportManager instance. */
    constructor($$source: Partial<TransportManager> = {}) {
        if (!("ID" in $$source)) {
            this["ID"] = 0;
        }
        if (!("CreatedAt" in $$source)) {
            this["CreatedAt"] = null;
        }
        if (!("UpdatedAt" in $$source)) {
            this["UpdatedAt"] = null;
        }
        if (!("DeletedAt" in $$source)) {
            this["DeletedAt"] = null;
        }
        if (!("Type" in $$source)) {
            this["Type"] = "";
        }
        if (!("NodeId" in $$source)) {
            this["NodeId"] = "";
        }
        if (!("Location" in $$source)) {
            this["Location"] = "";
        }
        if (!("Path" in $$source)) {
            this["Path"] = "";
        }
        if (!("Status" in $$source)) {
            this["Status"] = "";
        }
        if (!("Progress" in $$source)) {
            this["Progress"] = 0;
        }
        if (!("LocalPath" in $$source)) {
            this["LocalPath"] = null;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new TransportManager instance from a string or object.
     */
    static createFrom($$source: any = {}): TransportManager {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new TransportManager($$parsedSource as Partial<TransportManager>);
    }
}
