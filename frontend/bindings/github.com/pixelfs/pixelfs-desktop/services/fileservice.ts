// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Call as $Call, Create as $Create} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as v1$0 from "../../pixelfs/gen/pixelfs/v1/models.js";

export function CopyFile(src: v1$0.FileContext | null, dest: v1$0.FileContext | null): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(4050199003, src, dest) as any;
    return $resultPromise;
}

export function DownloadFile(ctx: v1$0.FileContext | null): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2899335430, ctx) as any;
    return $resultPromise;
}

export function GetFileList(ctx: v1$0.FileContext | null): Promise<(v1$0.File | null)[]> & { cancel(): void } {
    let $resultPromise = $Call.ByID(1340849926, ctx) as any;
    let $typingPromise = $resultPromise.then(($result: any) => {
        return $$createType2($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

export function Mkdir(ctx: v1$0.FileContext | null): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2797416843, ctx) as any;
    return $resultPromise;
}

export function MoveFile(src: v1$0.FileContext | null, dest: v1$0.FileContext | null): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2476337291, src, dest) as any;
    return $resultPromise;
}

export function PlayVideo(ctx: v1$0.FileContext | null): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(890583657, ctx) as any;
    return $resultPromise;
}

export function RemoveFile(ctx: v1$0.FileContext | null): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2110090878, ctx) as any;
    return $resultPromise;
}

export function RenameFile(src: v1$0.FileContext | null, dest: v1$0.FileContext | null): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(100419492, src, dest) as any;
    return $resultPromise;
}

export function StatFile(ctx: v1$0.FileContext | null): Promise<v1$0.File | null> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2579775092, ctx) as any;
    let $typingPromise = $resultPromise.then(($result: any) => {
        return $$createType1($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

export function UploadFile(ctx: v1$0.FileContext | null): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3482572087, ctx) as any;
    return $resultPromise;
}

// Private type creation functions
const $$createType0 = v1$0.File.createFrom;
const $$createType1 = $Create.Nullable($$createType0);
const $$createType2 = $Create.Array($$createType1);
