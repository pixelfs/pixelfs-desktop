// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Call as $Call, Create as $Create} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as v1$0 from "../../pixelfs/gen/pixelfs/v1/models.js";

export function AddS3Storage(name: string, config: v1$0.StorageS3Config | null, network: v1$0.StorageNetwork): Promise<v1$0.AddStorageResponse | null> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2732467683, name, config, network) as any;
    let $typingPromise = $resultPromise.then(($result: any) => {
        return $$createType1($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

export function AddStorageLink(storageLink: v1$0.StorageLink | null): Promise<v1$0.AddStorageLinkResponse | null> & { cancel(): void } {
    let $resultPromise = $Call.ByID(1410825885, storageLink) as any;
    let $typingPromise = $resultPromise.then(($result: any) => {
        return $$createType3($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

export function CleanStorageLink(storageLinkId: string): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2322754067, storageLinkId) as any;
    return $resultPromise;
}

export function GetStorageLinks(): Promise<(v1$0.StorageLink | null)[]> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3059385865) as any;
    let $typingPromise = $resultPromise.then(($result: any) => {
        return $$createType6($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

export function GetStorages(): Promise<(v1$0.Storage | null)[]> & { cancel(): void } {
    let $resultPromise = $Call.ByID(224873657) as any;
    let $typingPromise = $resultPromise.then(($result: any) => {
        return $$createType9($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

export function RemoveStorage(storageId: string): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2985798826, storageId) as any;
    return $resultPromise;
}

export function RemoveStorageLink(storageLinkId: string): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3600310402, storageLinkId) as any;
    return $resultPromise;
}

// Private type creation functions
const $$createType0 = v1$0.AddStorageResponse.createFrom;
const $$createType1 = $Create.Nullable($$createType0);
const $$createType2 = v1$0.AddStorageLinkResponse.createFrom;
const $$createType3 = $Create.Nullable($$createType2);
const $$createType4 = v1$0.StorageLink.createFrom;
const $$createType5 = $Create.Nullable($$createType4);
const $$createType6 = $Create.Array($$createType5);
const $$createType7 = v1$0.Storage.createFrom;
const $$createType8 = $Create.Nullable($$createType7);
const $$createType9 = $Create.Array($$createType8);
