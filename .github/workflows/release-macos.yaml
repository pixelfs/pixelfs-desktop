name: Release macOS App

on:
  release:
    types: [ published ]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Version tag'
        required: true
        default: '1.0.0'

jobs:
  release:
    name: Release macOS App
    runs-on: macos-latest
    strategy:
      matrix:
        platform:
          - darwin/amd64
          - darwin/arm64

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Normalise platform tag
        id: normalise_platform
        shell: bash
        run: |
          tag=$(echo ${{ matrix.platform }} | sed -e 's/\//_/g' -e 's/darwin/mac/g' -e 's/amd64/intel/g')
          echo "tag=$tag" >> "$GITHUB_OUTPUT"

      - name: Normalise version tag
        id: normalise_version
        shell: bash
        run: |
          if [ "${{ github.event.release.tag_name }}" == "" ]; then
            version=$(echo ${{ github.event.inputs.tag }} | sed -e 's/v//g')
            echo "version=$version" >> "$GITHUB_OUTPUT"
          else
            version=$(echo ${{ github.event.release.tag_name }} | sed -e 's/v//g')
            echo "version=$version" >> "$GITHUB_OUTPUT"
          fi

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: stable

      - name: Install wails
        shell: bash
        run: go install github.com/wailsapp/wails/v3/cmd/wails3@latest

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Build frontend assets
        shell: bash
        working-directory: ./frontend
        run: |
          npm install -g pnpm@10
          jq '.version = "${{ steps.normalise_version.outputs.version }}"' package.json > tmp.json
          mv tmp.json package.json
          pnpm install

      - name: Build wails app for macOS
        shell: bash
        run: |
          CGO_ENABLED=1 wails3 package

      - name: Checkout create-image
        uses: actions/checkout@v2
        with:
          repository: create-dmg/create-dmg
          path: ./build/create-dmg
          ref: master

      - name: Build macOS DMG
        shell: bash
        run: |
          ./build/create-dmg/create-dmg \
            --no-internet-enable \
            --volname "PixelFS" \
            --volicon "build/darwin/icons.icns" \
            --background "build/dmg/background.tiff" \
            --text-size 12 \
            --window-pos 400 400 \
            --window-size 660 450 \
            --icon-size 80 \
            --icon "PixelFS.app" 180 180 \
            --hide-extension "PixelFS.app" \
            --app-drop-link 480 180 \
            --add-file "Repair" "build/dmg/fix-app" 230 290 \
            --add-file "损坏修复" "build/dmg/fix-app_zh" 430 290 \
            "bin/PixelFS-${{ steps.normalise_platform.outputs.tag }}.dmg" \
            "bin"

      - name: Rename dmg
        working-directory: ./bin
        run: mv "PixelFS-${{ steps.normalise_platform.outputs.tag }}.dmg" "PixelFS_${{ steps.normalise_version.outputs.version }}_${{ steps.normalise_platform.outputs.tag }}.dmg"

      - name: Upload release asset (DMG Package)
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.normalise_version.outputs.version }}
          files: ./bin/PixelFS_${{ steps.normalise_version.outputs.version }}_${{ steps.normalise_platform.outputs.tag }}.dmg
          token: ${{ secrets.GH_PAT_TOKEN }}
